// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/DeployPanCommand.h"
#include "Commands/FrisbeePanSuperVisorCommand.h"
#include "Commands/KickerSupervisorCommand.h"
#include "Commands/LEDSupervisorCommand.h"
#include "Commands/MovePBToBottomCommand.h"
#include "Commands/MovePBToTopCommand.h"
#include "Commands/PanAtFeederStationCommand.h"
#include "Commands/PizzaBoxSupervisorCommand.h"
#include "Commands/ShootAndIndexOneFrisbeeCommand.h"
#include "Commands/ShooterAndIndexAllFrisbeesCommand.h"
#include "Commands/ShooterSupervisiorCommand.h"
#include "Commands/ShooterTiltSupervisorCommand.h"
#include "Commands/StowPanCommand.h"
#include "Commands/TiltShooterTiltDownCommand.h"
#include "Commands/TiltShooterUpCommand.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

	shooterJoystick = new Joystick(2);
	
	movePBToTioButton = new JoystickButton(shooterJoystick, 1);
	movePBToTioButton->WhenPressed(new MovePBToTopCommand());
	movePBToBottomButton = new JoystickButton(shooterJoystick, 1);
	movePBToBottomButton->WhenPressed(new MovePBToBottomCommand());
	tiltShooterDownButton = new JoystickButton(shooterJoystick, 1);
	tiltShooterDownButton->WhenPressed(new TiltShooterTiltDownCommand());
	tiltShooterUpButton = new JoystickButton(shooterJoystick, 1);
	tiltShooterUpButton->WhenPressed(new TiltShooterUpCommand());
	shootAndIndexOneFrisbeeButton = new JoystickButton(shooterJoystick, 1);
	shootAndIndexOneFrisbeeButton->WhenPressed(new ShootAndIndexOneFrisbeeCommand());
	shootAndIndexAllFrisbeesButton = new JoystickButton(shooterJoystick, 1);
	shootAndIndexAllFrisbeesButton->WhenPressed(new ShooterAndIndexAllFrisbeesCommand());
	driverJoystick = new Joystick(1);
	
	deployPanButton = new JoystickButton(driverJoystick, 1);
	deployPanButton->WhenPressed(new DeployPanCommand());
	stowPanButton = new JoystickButton(driverJoystick, 1);
	stowPanButton->WhenPressed(new StowPanCommand());
	panAtFeederStationButton = new JoystickButton(driverJoystick, 1);
	panAtFeederStationButton->WhileHeld(new PanAtFeederStationCommand());
     

        // SmartDashboard Buttons
	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

	SmartDashboard::PutData("PanAtFeederStationCommand", new PanAtFeederStationCommand());

	SmartDashboard::PutData("StowPanCommand", new StowPanCommand());

	SmartDashboard::PutData("DeployPanCommand", new DeployPanCommand());

	SmartDashboard::PutData("ShooterAndIndexAllFrisbeesCommand", new ShooterAndIndexAllFrisbeesCommand());

	SmartDashboard::PutData("ShootAndIndexOneFrisbeeCommand", new ShootAndIndexOneFrisbeeCommand());

	SmartDashboard::PutData("TiltShooterTiltDownCommand", new TiltShooterTiltDownCommand());

	SmartDashboard::PutData("TiltShooterUpCommand", new TiltShooterUpCommand());

	SmartDashboard::PutData("MovePBToTopCommand", new MovePBToTopCommand());

	SmartDashboard::PutData("MovePBToBottomCommand", new MovePBToBottomCommand());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

Joystick* OI::getShooterJoystick() {
	return shooterJoystick;
}

Joystick* OI::getDriverJoystick() {
	return driverJoystick;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
